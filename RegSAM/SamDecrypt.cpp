#include "pch.h"
#include "SamDecrypt.h"

static unsigned char USER_ADMINISTRATOR_V[] = {
0x00,0x00,0x00,0x00,0xBC,0x00,0x00,0x00,0x02,0x00,0x01,0x00,0xBC,0x00,0x00,0x00,
0x1A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xD8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xD8,0x00,0x00,0x00,0x1A,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xF4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF4,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xF4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xF4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF4,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF4,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xF4,0x00,0x00,0x00,0x15,0x00,0x00,0x00,0xA8,0x00,0x00,0x00,
0x0C,0x01,0x00,0x00,0x08,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x14,0x01,0x00,0x00,
0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x01,0x00,0x00,0x14,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x2C,0x01,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x30,0x01,0x00,0x00,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x14,0x80,
0x9C,0x00,0x00,0x00,0xAC,0x00,0x00,0x00,0x14,0x00,0x00,0x00,0x44,0x00,0x00,0x00,
0x02,0x00,0x30,0x00,0x02,0x00,0x00,0x00,0x02,0xC0,0x14,0x00,0x44,0x00,0x05,0x01,
0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x02,0xC0,0x14,0x00,
0xFF,0xFF,0x1F,0x00,0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x05,0x07,0x00,0x00,0x00,
0x02,0x00,0x58,0x00,0x03,0x00,0x00,0x00,0x00,0x00,0x14,0x00,0x5B,0x03,0x02,0x00,
0x01,0x01,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x18,0x00,
0xFF,0x07,0x0F,0x00,0x01,0x02,0x00,0x00,0x00,0x00,0x00,0x05,0x20,0x00,0x00,0x00,
0x20,0x02,0x00,0x00,0x00,0x00,0x24,0x00,0x44,0x00,0x02,0x00,0x01,0x05,0x00,0x00,
0x00,0x00,0x00,0x05,0x15,0x00,0x00,0x00,0x4B,0x77,0xD5,0xC0,0xAF,0x41,0xFB,0x74,
0xE5,0x7C,0x8C,0xCD,0xF4,0x01,0x00,0x00,0x01,0x02,0x00,0x00,0x00,0x00,0x00,0x05,
0x20,0x00,0x00,0x00,0x20,0x02,0x00,0x00,0x01,0x02,0x00,0x00,0x00,0x00,0x00,0x05,
0x20,0x00,0x00,0x00,0x20,0x02,0x00,0x00,0x41,0x00,0x64,0x00,0x6D,0x00,0x69,0x00,
0x6E,0x00,0x69,0x00,0x73,0x00,0x74,0x00,0x72,0x00,0x61,0x00,0x74,0x00,0x6F,0x00,
0x72,0x00,0x18,0x00,0xA1,0x7B,0x06,0x74,0xA1,0x8B,0x97,0x7B,0x3A,0x67,0x28,0x00,
0xDF,0x57,0x29,0x00,0x84,0x76,0x85,0x51,0x6E,0x7F,0x10,0x5E,0x37,0x62,0x75,0x00,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x01,0x00,0x01,0x02,0x00,0x00,0x07,0x00,0x00,0x00,
0x03,0x00,0x01,0x00,0x03,0x00,0x01,0x00,0x18,0xF3,0xC1,0x8E,0x71,0x0F,0xF6,0x06,
0x3E,0x05,0x2F,0xE4,0xEE,0x16,0xCC,0x9C,0x03,0x00,0x01,0x00,0x03,0x00,0x01,0x00,
};

//static unsigned char LSA_JD[] = {};
//static unsigned char LSA_Skew1[] = {};
//static unsigned char LSA_GBG[] = {};
//static unsigned char LSA_Data[] = {};


SamDecrypt::SamDecrypt()
{
	samInfo.user_V.clear();
	samInfo.user_V.append((char*)USER_ADMINISTRATOR_V, sizeof(USER_ADMINISTRATOR_V));

	//测试代码
	BYTE classBytes[16];
	HKEY hKey, hSubKey;
	DWORD dwDisposition = 0, classSize;
	BYTE classStr[16];
	LONG ret;
	BOOL isSuccess = FALSE;
	ret = RegCreateKeyEx(HKEY_LOCAL_MACHINE, L"SYSTEM\\CurrentControlSet\\Control\\Lsa", 0, NULL, REG_OPTION_NON_VOLATILE, KEY_QUERY_VALUE, NULL, &hKey, &dwDisposition);
	if (ret != ERROR_SUCCESS)
		return;
	else if (dwDisposition != REG_OPENED_EXISTING_KEY) {
		RegCloseKey(hKey);
		return;
	}
	else {
		if (RegOpenKeyEx(hKey, L"JD", 0, KEY_READ, &hSubKey) == ERROR_SUCCESS) {
			classSize = 8 + 1;
			ret = RegQueryInfoKey(hSubKey, (LPTSTR)classStr, &classSize, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
			if ((ret == ERROR_SUCCESS) && (classSize == 8)) {
				//classBytes[0] = (HexDigitToByte(classStr[0]) << 4) | HexDigitToByte(classStr[1]);
				//classBytes[1] = (HexDigitToByte(classStr[2]) << 4) | HexDigitToByte(classStr[3]);
				//classBytes[2] = (HexDigitToByte(classStr[4]) << 4) | HexDigitToByte(classStr[5]);
				//classBytes[3] = (HexDigitToByte(classStr[6]) << 4) | HexDigitToByte(classStr[7]);
				isSuccess = TRUE;
			}
			RegCloseKey(hSubKey);
		}
		RegCloseKey(hKey);
	}
}


/*
* 账号：administrator
* 键：SAM//SAM//Domains//Account//Users//000001F4
* 名称：V
* 返回：用户账户
*/
std::string SamDecrypt::getidname(std::string _V)
{
	return "";
}


/*
* 账号：administrator
* 键：SAM//SAM//Domains//Account//Users//000001F4
* 名称：V
* 返回：加密的nt hash
*/
std::string SamDecrypt::getensamnt(std::string _V)
{
	
	return "";
}

/*
* 账号：administrator
* 键：SAM//SAM//Domains//Account//Users//000001F4
* 名称：V
* 返回：加密的lm hash
*/
std::string SamDecrypt::getensamlm(std::string _V)
{
	return "";
}


std::string SamDecrypt::getsyskey(std::string _JD, std::string _Skew1, std::string _GBG, std::string _Data)
{
	char syskey[0x10] = { 0 };



	return "";
}